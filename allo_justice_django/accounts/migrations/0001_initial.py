# Generated by Django 3.2 on 2021-04-20 14:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attorney',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(blank=True, default='attorney', max_length=50, null=True, verbose_name='Type')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('sex', models.CharField(blank=True, choices=[('H', 'Homme'), ('F', 'Femme')], default='H', max_length=1, null=True)),
                ('building', models.CharField(blank=True, max_length=255, null=True)),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True)),
                ('indication', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, choices=[('Agadir', 'Agadir'), ('Arfoud', 'Arfoud'), ('Azrou', 'Azrou'), ('Benguérir', 'Benguérir'), ('Beni Mellal', 'Beni Mellal'), ('Benslimane', 'Benslimane'), ('Berkane', 'Berkane'), ('Berrechid', 'Berrechid'), ('Casablanca', 'Casablanca'), ('Dakhla', 'Dakhla'), ('Dar Bouazza', 'Dar Bouazza'), ('El Jadida', 'El Jadida'), ('Errachidia', 'Errachidia'), ('Essaouira', 'Essaouira'), ('Fkih Ben Saleh', 'Fkih Ben Saleh'), ('Fés', 'Fés'), ('Inezgane', 'Inezgane'), ('Khemisset', 'Khemisset'), ('Khouribga', 'Khouribga'), ('Khénifra', 'Khénifra'), ('Kénitra', 'Kénitra'), ('Larache', 'Larache'), ('Laâyoune', 'Laâyoune'), ('Marrakech', 'Marrakech'), ('Mechra Bel Ksiri', 'Mechra Bel Ksiri'), ('Meknés', 'Meknés'), ('Mohammedia', 'Mohammedia'), ('Nador', 'Nador'), ('Ouarzazate', 'Ouarzazate'), ('Oujda', 'Oujda'), ('Rabat', 'Rabat'), ('Safi', 'Safi'), ('Salé', 'Salé'), ('Settat', 'Settat'), ('Sidi Bennour', 'Sidi Bennour'), ('Sidi Kacem', 'Sidi Kacem'), ('Skhirat', 'Skhirat'), ('Tanger', 'Tanger'), ('Taroudant', 'Taroudant'), ('Tata', 'Tata'), ('Taza', 'Taza'), ('Temara', 'Temara'), ('Tétouan', 'Tétouan')], max_length=150, null=True)),
                ('zip_code', models.IntegerField(blank=True, null=True)),
                ('tel', models.CharField(blank=True, max_length=255, null=True)),
                ('gsm', models.CharField(blank=True, max_length=255, null=True)),
                ('presentation', models.TextField(blank=True, null=True)),
                ('education', models.TextField(blank=True, null=True)),
                ('experience', models.TextField(blank=True, null=True)),
                ('skill', models.TextField(blank=True, null=True)),
                ('rib', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('youtube', models.CharField(blank=True, max_length=255, null=True)),
                ('facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('web', models.CharField(blank=True, max_length=255, null=True)),
                ('video', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, default='/uploads/default.png', max_length=255, null=True, upload_to='uploads/%Y/%m/%d/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Attorney',
                'verbose_name_plural': 'Attorneys',
                'db_table': 'attorney',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('Agadir', 'Agadir'), ('Arfoud', 'Arfoud'), ('Azrou', 'Azrou'), ('Benguérir', 'Benguérir'), ('Beni Mellal', 'Beni Mellal'), ('Benslimane', 'Benslimane'), ('Berkane', 'Berkane'), ('Berrechid', 'Berrechid'), ('Casablanca', 'Casablanca'), ('Dakhla', 'Dakhla'), ('Dar Bouazza', 'Dar Bouazza'), ('El Jadida', 'El Jadida'), ('Errachidia', 'Errachidia'), ('Essaouira', 'Essaouira'), ('Fkih Ben Saleh', 'Fkih Ben Saleh'), ('Fés', 'Fés'), ('Inezgane', 'Inezgane'), ('Khemisset', 'Khemisset'), ('Khouribga', 'Khouribga'), ('Khénifra', 'Khénifra'), ('Kénitra', 'Kénitra'), ('Larache', 'Larache'), ('Laâyoune', 'Laâyoune'), ('Marrakech', 'Marrakech'), ('Mechra Bel Ksiri', 'Mechra Bel Ksiri'), ('Meknés', 'Meknés'), ('Mohammedia', 'Mohammedia'), ('Nador', 'Nador'), ('Ouarzazate', 'Ouarzazate'), ('Oujda', 'Oujda'), ('Rabat', 'Rabat'), ('Safi', 'Safi'), ('Salé', 'Salé'), ('Settat', 'Settat'), ('Sidi Bennour', 'Sidi Bennour'), ('Sidi Kacem', 'Sidi Kacem'), ('Skhirat', 'Skhirat'), ('Tanger', 'Tanger'), ('Taroudant', 'Taroudant'), ('Tata', 'Tata'), ('Taza', 'Taza'), ('Temara', 'Temara'), ('Tétouan', 'Tétouan')], max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'db_table': 'city',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_name', models.CharField(blank=True, choices=[('Mo', 'Lundi'), ('Tu', 'Mardi'), ('We', 'Mercredi'), ('Th', 'Jeudi'), ('Fr', 'Vendredi'), ('Sa', 'Samedi'), ('Su', 'Dimanche')], max_length=100, null=True)),
                ('time_from', models.CharField(blank=True, choices=[('00:00', '00:00'), ('00:15', '00:15'), ('00:30', '00:30'), ('00:45', '00:45'), ('01:00', '01:00'), ('01:15', '01:15'), ('01:30', '01:30'), ('01:45', '01:45'), ('02:00', '02:00'), ('02:15', '02:15'), ('02:30', '02:30'), ('02:45', '02:45'), ('03:00', '03:00'), ('03:15', '03:15'), ('03:30', '03:30'), ('03:45', '03:45'), ('04:00', '04:00'), ('04:15', '04:15'), ('04:30', '04:30'), ('04:45', '04:45'), ('05:00', '05:00'), ('05:15', '05:15'), ('05:30', '05:30'), ('05:45', '05:45'), ('06:00', '06:00'), ('06:15', '06:15'), ('06:30', '06:30'), ('06:45', '06:45'), ('07:00', '07:00'), ('07:15', '07:15'), ('07:30', '07:30'), ('07:45', '07:45'), ('08:00', '08:00'), ('08:15', '08:15'), ('08:30', '08:30'), ('08:45', '08:45'), ('09:00', '09:00'), ('09:15', '09:15'), ('09:30', '09:30'), ('09:45', '09:45'), ('10:00', '10:00'), ('10:15', '10:15'), ('10:30', '10:30'), ('10:45', '10:45'), ('11:00', '11:00'), ('11:15', '11:15'), ('11:30', '11:30'), ('11:45', '11:45'), ('12:00', '12:00'), ('12:15', '12:15'), ('12:30', '12:30'), ('12:45', '12:45'), ('13:00', '13:00'), ('13:15', '13:15'), ('13:30', '13:30'), ('13:45', '13:45'), ('14:00', '14:00'), ('14:15', '14:15'), ('14:30', '14:30'), ('14:45', '14:45'), ('15:00', '15:00'), ('15:15', '15:15'), ('15:30', '15:30'), ('15:45', '15:45'), ('16:00', '16:00'), ('16:15', '16:15'), ('16:30', '16:30'), ('16:45', '16:45'), ('17:00', '17:00'), ('17:15', '17:15'), ('17:30', '17:30'), ('17:45', '17:45'), ('18:00', '18:00'), ('18:15', '18:15'), ('18:30', '18:30'), ('18:45', '18:45'), ('19:00', '19:00'), ('19:15', '19:15'), ('19:30', '19:30'), ('19:45', '19:45'), ('20:00', '20:00'), ('20:15', '20:15'), ('20:30', '20:30'), ('20:45', '20:45'), ('21:00', '21:00'), ('21:15', '21:15'), ('21:30', '21:30'), ('21:45', '21:45'), ('22:00', '22:00'), ('22:15', '22:15'), ('22:30', '22:30'), ('22:45', '22:45'), ('23:00', '23:00'), ('23:15', '23:15'), ('23:30', '23:30'), ('23:45', '23:45')], max_length=10, null=True)),
                ('time_to', models.CharField(blank=True, choices=[('00:00', '00:00'), ('00:15', '00:15'), ('00:30', '00:30'), ('00:45', '00:45'), ('01:00', '01:00'), ('01:15', '01:15'), ('01:30', '01:30'), ('01:45', '01:45'), ('02:00', '02:00'), ('02:15', '02:15'), ('02:30', '02:30'), ('02:45', '02:45'), ('03:00', '03:00'), ('03:15', '03:15'), ('03:30', '03:30'), ('03:45', '03:45'), ('04:00', '04:00'), ('04:15', '04:15'), ('04:30', '04:30'), ('04:45', '04:45'), ('05:00', '05:00'), ('05:15', '05:15'), ('05:30', '05:30'), ('05:45', '05:45'), ('06:00', '06:00'), ('06:15', '06:15'), ('06:30', '06:30'), ('06:45', '06:45'), ('07:00', '07:00'), ('07:15', '07:15'), ('07:30', '07:30'), ('07:45', '07:45'), ('08:00', '08:00'), ('08:15', '08:15'), ('08:30', '08:30'), ('08:45', '08:45'), ('09:00', '09:00'), ('09:15', '09:15'), ('09:30', '09:30'), ('09:45', '09:45'), ('10:00', '10:00'), ('10:15', '10:15'), ('10:30', '10:30'), ('10:45', '10:45'), ('11:00', '11:00'), ('11:15', '11:15'), ('11:30', '11:30'), ('11:45', '11:45'), ('12:00', '12:00'), ('12:15', '12:15'), ('12:30', '12:30'), ('12:45', '12:45'), ('13:00', '13:00'), ('13:15', '13:15'), ('13:30', '13:30'), ('13:45', '13:45'), ('14:00', '14:00'), ('14:15', '14:15'), ('14:30', '14:30'), ('14:45', '14:45'), ('15:00', '15:00'), ('15:15', '15:15'), ('15:30', '15:30'), ('15:45', '15:45'), ('16:00', '16:00'), ('16:15', '16:15'), ('16:30', '16:30'), ('16:45', '16:45'), ('17:00', '17:00'), ('17:15', '17:15'), ('17:30', '17:30'), ('17:45', '17:45'), ('18:00', '18:00'), ('18:15', '18:15'), ('18:30', '18:30'), ('18:45', '18:45'), ('19:00', '19:00'), ('19:15', '19:15'), ('19:30', '19:30'), ('19:45', '19:45'), ('20:00', '20:00'), ('20:15', '20:15'), ('20:30', '20:30'), ('20:45', '20:45'), ('21:00', '21:00'), ('21:15', '21:15'), ('21:30', '21:30'), ('21:45', '21:45'), ('22:00', '22:00'), ('22:15', '22:15'), ('22:30', '22:30'), ('22:45', '22:45'), ('23:00', '23:00'), ('23:15', '23:15'), ('23:30', '23:30'), ('23:45', '23:45')], max_length=10, null=True)),
                ('attorney', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attorney', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Schedule',
                'verbose_name_plural': 'Schedules',
                'db_table': 'schedule',
                'managed': True,
            },
        ),
    ]
